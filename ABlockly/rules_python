start::
def main():
    \(next$pass),

start_tilt::
def onTilt():
    \(next$pass),

start_barrier::
def onBarrier():
    \(next$pass),

start_barrier_space::
def onBarrier()
    \(next$pass),

control_repeat_ext::
for i in range(\(value[name=TIMES]$0)):
    \(statement[name=DO]$pass),

control_repeat_forever::
while True:
    \(statement[name=DO]$pass),

control_if::
if \(value[name=IF0]$false):
    \(statement[name=DO0]$pass),

control_if_else::
if \(value[name=IF0]):
    \(statement[name=DO0]$pass)
else:
    \(statement[name=ELSE]$pass),

turtle_turn::
turn(dir = "\(field[name=DIR])", angle = \(value[name=VALUE]$0)),

turtle_move::
move(dir = "\(field[name=DIR])", steps = \(value[name=VALUE]$0)),

move_action::
move("\(field[name=ACTION])"),

turtle_color::
color(color:\()),

angle_picker::
\(field[name=NUM]),

math_number::
\(field[name=NUM]),

math_modulo::
\(value[name=DIVIDEND]$0) % \(value[name=DIVISOR$1]),

math_random::
random(),

math_random_limit::
random(from = \(value[name=FROM]$0), to = \(value[name=TO]$0)),

math_round::
round(\(value[name=NUM]$0)),

logic_compare::
\(value[name=A]$0) \(field[name=OP]) \(value[name=B]$0),

logic_negate::
!\(value[name=BOOL]$True),

math_arithmetic::
\(value[name=A]$0) \(field[name=OP]) \(value[name=B]$0),

procedures_callnoreturn::
\(field[name=NAME])(),

procedures_defnoreturn::
def \(field[name=NAME])():
{
    \(statement[name=DO]$pass)
},

variables_set::
\(field[name=VAR]) = \(value[name=VALUE]$0),

variables_get::
\(field[name=VAR]),
